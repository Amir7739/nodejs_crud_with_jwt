{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Node.js Express API with Swagger",
    "description": "CRUD operations and user authentication with JWT"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/users/signin": {
      "post": {
        "summary": "Authenticate user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["username", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Authentication failed"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },

    "/users/logout": { 
      "post": {
        "summary": "Logout user",
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },

    "/emp/createEmployee": {
      "post": {
        "summary": "Create a new employee",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "empId": {
                    "type": "string"
                  },
                  "empName": {
                    "type": "string"
                  },
                  "empSal": {
                    "type": "string"
                  }
                },
                "required": ["empId", "empName", "empSal"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee Created successfully"
          },
          "401": {
            "description": "Employee creation failed "
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/emp/getAllEmp": {
      "get": {
        "summary": "Get all users",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "All data retrieved successfully"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    },
    "/emp/{empId}": {
      "get": {
        "summary": "Get employee by ID",
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Get single employee by Id"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Employee found"
          },
          "404": {
            "description": "Employee not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "put": {
        "summary": "Update Employee by ID",
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Update Employee by ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Employee updated successfully"
          },
          "404": {
            "description": "Employee not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      },
      "delete": {
        "summary": "Delete Employee by Id",
        "parameters": [
          {
            "name": "empId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Delete single employee by Id"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Emp deleted successfully"
          },
          "404": {
            "description": "Emp not found"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["username", "email", "password"]
      },
      "Employee": {
        "type": "object",
        "properties": {
          "empId": {
            "type": "string"
          },
          "empName": {
            "type": "string"
          },
          "empSal": {
            "type": "number"
          }
        },
        "required": ["empId", "empName", "empSal"]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
